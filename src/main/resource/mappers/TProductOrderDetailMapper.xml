<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.ddhj.mapper.TProductOrderDetailMapper">
	<resultMap id="BaseResultMap" type="cn.com.ddhj.model.TProductOrderDetail">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="order_code" property="orderCode" jdbcType="VARCHAR" />
		<result column="product_code" property="productCode" jdbcType="VARCHAR" />
		<result column="current_price" property="currentPrice"
			jdbcType="INTEGER" />
		<result column="buy_num" property="buyNum" jdbcType="INTEGER" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<collection property="product" ofType="cn.com.ddhj.model.TProductInfo">
			<result column="product_name" property="productName" jdbcType="VARCHAR" />
			<result column="main_pic_url" property="mainPicUrl" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
	<sql id="Base_Column_List">
		id, uuid, order_code, product_code, current_price, buy_num,
		create_user,
		DATE_FORMAT(create_time,'%Y-%m-%d
		%H:%i:%s') as
		create_time,
		update_user,
		DATE_FORMAT(update_time,'%Y-%m-%d %H:%i:%s')
		as
		update_time
	</sql>
	<select id="selectByCode" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_product_order_detail
		where order_code =
		#{orderCode,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByCode" parameterType="java.lang.String">
		delete from
		t_product_order_detail
		where order_code = #{orderCode,jdbcType=VARCHAR}
	</delete>
	<insert id="insertSelective" parameterType="cn.com.ddhj.model.TProductOrderDetail">
		insert into t_product_order_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			uuid,
			order_code,
			product_code,
			current_price,
			buy_num,
			create_user,
			create_time,
			update_user,
			update_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{uuid,jdbcType=VARCHAR},
			#{orderCode,jdbcType=VARCHAR},
			#{productCode,jdbcType=VARCHAR},
			#{currentPrice,jdbcType=INTEGER},
			#{buyNum,jdbcType=INTEGER},
			#{createUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{createTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s'),
			#{updateUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s'),
		</trim>
	</insert>
	<update id="updateByCode" parameterType="cn.com.ddhj.model.TProductOrderDetail">
		update t_product_order_detail
		<set>
			<if test="productCode != null and productCode != ''">
				product_code = #{productCode,jdbcType=VARCHAR},
			</if>
			<if test="currentPrice != null">
				current_price = #{currentPrice,jdbcType=INTEGER},
			</if>
			<if test="buyNum != null">
				buy_num = #{buyNum,jdbcType=INTEGER},
			</if>
			update_user = #{updateUser,jdbcType=VARCHAR},
			update_time =
			STR_TO_DATE(#{updateTime,jdbcType=VARCHAR},'%Y-%m-%d %H:%i:%s'),
		</set>
		where order_code = #{orderCode,jdbcType=VARCHAR}
	</update>
	<insert id="batchInsert" parameterType="list">
		insert into t_product_order_detail(
		uuid,
		order_code,
		product_code,
		current_price,
		buy_num,
		create_user,
		create_time,
		update_user,
		update_time)
		values
		<foreach collection="list" item="product" index="index"
			separator=",">
			(
			#{product.uuid,jdbcType=VARCHAR},
			#{product.orderCode,jdbcType=VARCHAR},
			#{product.productCode,jdbcType=VARCHAR},
			#{product.currentPrice,jdbcType=INTEGER},
			#{product.buyNum,jdbcType=INTEGER},
			#{product.createUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{product.createTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s'),
			#{product.createUser,jdbcType=VARCHAR},
			STR_TO_DATE(#{product.createTime,jdbcType=VARCHAR},'%Y-%m-%d
			%H:%i:%s')
			)
		</foreach>
	</insert>
	<!-- 根据订单编码查询订单商品列表 -->
	<select id="findOrderProductDetail" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT
		od.product_code,
		p.product_name,
		p.main_pic_url,
		od.buy_num,
		od.current_price
		FROM
		t_product_order_detail AS od,
		t_product_info AS p
		WHERE
		od.product_code = p.product_code
		AND
		od.order_code = #{orderCode,jdbcType=VARCHAR}
	</select>
</mapper>